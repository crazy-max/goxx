name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
permissions:
  contents: read

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  DOCKERHUB_SLUG: crazymax/goxx
  GHCR_SLUG: ghcr.io/crazy-max/goxx
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      -
        name: Cache
        uses: actions/cache@v4
        with:
          path: /tmp/.goxx-cache
          key: ${{ runner.os }}-goxx-base-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-goxx-base-
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build base (cache only)
        uses: docker/bake-action@v6
        with:
          targets: base
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.cache-from=type=gha,scope=base
            *.cache-to=type=gha,scope=base,mode=max

  build:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      # same as global permissions
      contents: read
      # required to push to GHCR
      packages: write
    env:
      LATEST_CURRENT: 1.25.1
      LATEST_PREVIOUS: 1.24.7
    strategy:
      fail-fast: false
      matrix:
        go_version:
          - 1.24.0
          - 1.24.1
          - 1.24.2
          - 1.24.3
          - 1.24.4
          - 1.24.5
          - 1.24.6
          - 1.24.7
          - 1.25.0
          - 1.25.1
    steps:
      -
        name: Remove dotnet
        run: sudo rm -rf /usr/share/dotnet
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Tags
        id: tags
        uses: actions/github-script@v8
        with:
          result-encoding: string
          script: |
            const os = require('os');
            const majorMinor = "${{ matrix.go_version }}".match(/[0-9]+\.[0-9]+/g)[0];
            const tags = ["${{ matrix.go_version }}"];
            switch ("${{ matrix.go_version }}") {
              case "${{ env.LATEST_CURRENT }}": {
                tags.push(majorMinor, "latest");
                break;
              }
              case "${{ env.LATEST_PREVIOUS }}": {
                tags.push(majorMinor);
                break;
              }
            }
            return tags.join(os.EOL);
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tags: ${{ steps.tags.outputs.result }}
          labels: |
            org.opencontainers.image.title=goxx (go-${{ matrix.go_version }})
            org.opencontainers.image.vendor=CrazyMax
      -
        name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build goxx
        uses: docker/bake-action@v6
        with:
          files: |
            ./docker-bake.hcl
            cwd://${{ steps.meta.outputs.bake-file }}
          targets: image
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.args.GO_VERSION=${{ matrix.go_version }}
            *.cache-from=type=gha,scope=base
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
